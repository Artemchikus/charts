name: CI/CD
on:
  push:
    branches:
      - withDockerAll
jobs:
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check Out Repo
  #       uses: actions/checkout@v2

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Build and push backend
  #       id: docker_build_backend
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./backend
  #         file: ./backend/Dockerfile.prod
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/invest-board:backend_${{ github.sha }}

  #     - name: Build and push frontend
  #       id: docker_build_frontend
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./frontend/front
  #         file: ./frontend/front/Dockerfile.prod
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/invest-board:frontend_${{ github.sha }}

  #     - name: Build and push migrations
  #       id: docker_build_migrations
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./backend/migrations
  #         file: ./backend/migrations/Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/invest-board:migrations_${{ github.sha }}

  #     - name: Image digest
  #       run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    # needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to remote server
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: root@45.8.228.5
          ssh_private_key: "-----BEGIN RSA PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
NhAAAAAwEAAQAAAYEAnAT8dGbRF320R1OZdd7xICLwlbyAnnqTPiqlCMtYq3GoY+ZsX4+p
L2rr86iDWjsuHXi6cwzmf5r71PXfsuxnvQ3OIwJqCeJUC2imDrRaR6KxZCbT7J2LwBWgrX
sSIvlI/j3IRd7mlPJV+GLzJ0bc3UESwn2g0+4kR9dHW1fwJWhnun0PnqBjxeruGqSlpqTf
47woY0sLHpPKd/YXbIIOrOOlVlu7RjS3rznCHkbyUb4MXsxdNTZJaRhDfCbTxiTIahU12g
G2phHZfP23T0MnTE3M3wbkjlyoKiEnnsTgtBOgd/roK5sylIRjUM7KcVbjdlLHsF3AuK7F
hKq+Pruje1UwKw8fioOKVoDpmV8i+4D+YH76qcdEVwN7A8DvrbE/0uj6iYzwypC+J1GqJJ
KIcZzdmGK+FOhTdGa6/+rHUnq5aXUObwZYnOYKPsh84UtqraKwRhsy0ecbi4JHM3tUa2+m
G2H60Im9lmEJDAFYnGy22jBDUAaqriD19vjT3K3zAAAFkLWkcc21pHHNAAAAB3NzaC1yc2
EAAAGBAJwE/HRm0Rd9tEdTmXXe8SAi8JW8gJ56kz4qpQjLWKtxqGPmbF+PqS9q6/Oog1o7
Lh14unMM5n+a+9T137LsZ70NziMCagniVAtopg60WkeisWQm0+ydi8AVoK17EiL5SP49yE
Xe5pTyVfhi8ydG3N1BEsJ9oNPuJEfXR1tX8CVoZ7p9D56gY8Xq7hqkpaak3+O8KGNLCx6T
ynf2F2yCDqzjpVZbu0Y0t685wh5G8lG+DF7MXTU2SWkYQ3wm08YkyGoVNdoBtqYR2Xz9t0
9DJ0xNzN8G5I5cqCohJ57E4LQToHf66CubMpSEY1DOynFW43ZSx7BdwLiuxYSqvj67o3tV
MCsPH4qDilaA6ZlfIvuA/mB++qnHRFcDewPA762xP9Lo+omM8MqQvidRqiSSiHGc3Zhivh
ToU3Rmuv/qx1J6uWl1Dm8GWJzmCj7IfOFLaq2isEYbMtHnG4uCRzN7VGtvphth+tCJvZZh
CQwBWJxsttowQ1AGqq4g9fb409yt8wAAAAMBAAEAAAGAYykUHxM973U4gGDU10KT9D3gtP
pysMbtEITgEV/UglqhkKTh2jafbADD6EABA/c7DwYtUnQvh4jEaAzBWaHBKTo9+qhNJu0P
R5UCfbQI8SCpKCM5bFiRessELV5cH5ha2SQBRs8ttBr1owGY0yzJsWHrf2uDLU9dBcAAnU
Cd49ignLlhlQsRfrgbDxn4IpsFpWNwM/N9JLj/5RCmwJNEqoOhEOsKcsuMtzS5eK7U0jk8
+X9f+jL/o2kFc0HmNTgonpsQG3TD+B45csQOEiGQYFVeHhy6LN9ryJYJVHcIdtAMIs5ews
XtLTTrfRNTCRO3JLxQX/xUJr0JlIJNucRT3cgeGGCYrMm2jPQyigF7xeJbcqL8apbhUhRf
+xxXBS8h7TO1RUNsujnPipg6+5bxAPcao/P1+NlmMD+GtZksYnx94Lzrai23/MXY+ZxUci
vT3ERU6tbseD6QwDP6AJtqZvx9tscLmC/WM7D3OGBnug2htfIKpt5Xc6dun9TYM3WpAAAA
wE44OVCvGb2PSnobYqOyMi0yqJroyZLZakzvjDz/wrAPV/Ee7G7Kw6R50Yc6mEle+vEdhd
dX4WsFmAS5VxYTP02xz3bnDo1KZKGn7lYfIYJYqRjm0ucSPnHlLrAERzZvDZULt/wLFLFS
9r0/c/9wJrzybBgCUrrgkTRdr2Zev9e5mN0Aw22fgIXv7ySpbrygq/UBTxXAgFSpujmcmj
lqYwvEkwbLelpWVjv9fjamYTTn5+GP7+A2m82f7W50bFMMTQAAAMEAypN+fljcd8JPQkqN
UUTnD1uUNwVm5VIQObjzcyJYyZV5Ivr9WtyDfzn8rhajdLSB0p+vjuWhihouiL5GV75etn
tU/4WLEMFQY9t6uU5sSlPhxGihF4KC4D+BLCti3P1B1SugBR1X3iV3zZ6Pb4eg1vgnDqNE
xzXQsoDE1stws0Aqhuze11+p2AbUYO581NbdNWC+UwPjNBeka8oy36+IiVAf6A6EuM4sU7
hW9gmHkqtyULMV19e0B27RShHYJtkPAAAAwQDFKlDFjmQcShXABCH1SutbJ8mG9z5iJkoh
Z3kSAonMMJXIcX38rbJW+PZBeNqSKxxHZVpFts9xcRg2htSMAnCPAxJzT/9lPz8czzeCvO
bbLWLjsrEhTyMLYlvAVoWYuvrACsQRtcqC/9AqiVhBJ16RIoY/nGrcjZKvFLiAxxHDnSmf
KRy8XdhhdHlfIyTBd0/eHtgWCczXKjFeODXU8iXCmdNcsLAcE0TIQpFeU886db2kCP7tHh
pdnUN3Hyt/9N0AAAAVZmlsYXJAREVTS1RPUC0wUE9NSkk4AQIDBAUG
-----END RSA PRIVATE KEY-----"
          ssh_public_key: "45.8.228.5 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJsuc8b7F1EnfiKrKN3vDE7FGgblYbV1TDOQ3tKn8wbm6H+mOD7PlkauHyfW09XCXhvTDHe8bzxq0c9add6WtvM="
          deployment_mode: docker-compose
          stack_file_name: docker-compose.prod.yaml
          args: up -d -build
          docker_prune: true
          pull_images_first: true
